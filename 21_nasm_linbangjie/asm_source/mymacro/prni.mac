; ********************** prni.mac *********************
;
; prni  bmem, byteCountValue
; 將bmem位元組開始共byteCountValue個位元組以有符號整數
; 顯示於螢幕。
;   bmem           : 位元組開始位址 (傳址)
;   byteCountValue : 位元組數 (傳值)
;
%ifndef PRNI_MACRO
%define PRNI_MACRO
%MACRO  prni    2           ;二個參數
        PUSHA               ;儲存原來暫存器資料
        MOV     CX, %2
        CMP     CX, 1
        JE      %%byte1
        CMP     CX, 2
        JE      %%byte2
        JMP     %%byte4
%%byte1:
        MOVSX   EAX, BYTE [%1]  ;位元組參數(低雙字組值)
        JMP     %%next
%%byte2:
        MOVSX   EAX, WORD [%1]  ;字組參數(低雙字組值)
        JMP     %%next
%%byte4:
        MOV     EAX, [%1]   ;雙字組參數(低雙字組值)
%%next:
        CMP     EAX, 0      ;與0比較
        JGE     %%pos       ;正數
        PUSH    EAX
        MOV     DL, '-'     ;顯示'-'
        MOV     AH, 02H
        INT     21H
        POP     EAX
        NEG     EAX         ;負數變正數
%%pos:
        MOV     EDX, 0      ;參數高雙字組值
        MOV     EBX, 10     ;除數為10(十進位)
        MOV     CX, 0       ;整數位數計數
%%loop2:
        DIV     EBX         ;EDX:EAX/10
        PUSH    EDX         ;疊入餘數
        INC     CX          ;整數位數增一
        MOV     EDX, 0      ;參數高字組值
        CMP     EAX, 0      ;商數是否為零
        JNZ     %%loop2     ;否,跳至%%loop2繼續
%%loop4:
        POP     EAX         ;疊出餘數至EAX
        ADD     AL, 30H     ;餘數調整為ASCII碼
        MOV     DL, AL      ;DL=餘數ASCII碼
        MOV     AH, 02H     ;設定顯示字元功能
        INT     21H         ;顯示餘數
        LOOP    %%loop4     ;繼續處理下個餘數
        POPA                ;恢復原來暫存器資料
%ENDMACRO
%endif

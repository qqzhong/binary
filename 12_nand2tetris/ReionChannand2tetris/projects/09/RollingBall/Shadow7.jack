/**
 *
 * ############################################################################
 * 
 *                          版权声明（中文版）
 *
 * ############################################################################
 * 
 * 版权所有 2015-2017 Reion Chan
 * 
 * 本程序遵照GPLv3，在你以任何方式使用本程序时，请务必署名此程序作者（Reion Chan）。
 * 本程序为自由软件：你可以在遵照GNU GPLv3（及后续版本）条款的前提下，转发、修改本程序。
 * 尝试在你的计算机要素的课程中盗用本程序的源代码将被诅咒会一生只写漏洞百出的程序。
 * 本程序旨在学习、交流，对本程序不承担任何担保责任，详细参见GPLv3许可。
 * 本程序包含一个GUN 通用公共授权。如果没有，请访问<http://www.gnu.org/licenses/>
 *
 *
 *
 * ############################################################################
 * 
 *                          Copyright （English Edition）
 *
 * ############################################################################
 *
 * Copyright 2015-2017 Reion Chan.
 *
 * You are required to give attribution to the author (Reion Chan) for any
 * use of this program (GPLv3 Section 7b).
 * 
 * Trying to pass off my code as your own in your Elements of Computing classes
 * will result in a cursed life of forever buggy software.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
class Shadow7 {
	field Array bitMap;

	constructor Shadow7 new() {
		let bitMap = Array.new(40);

		do fillBitMap(0, 0, -24576, -21846, 0);
		do fillBitMap(1, 0, 21760, 21845, 21);
		do fillBitMap(2, 0, -21856, -21846, 170);
		do fillBitMap(3, 0, 21844, 21845, 1365);
		do fillBitMap(4, 0, -21846, -21846, 2730);
		do fillBitMap(5, 0, 21844, 21845, 1365);
		do fillBitMap(6, 0, -21848, -21846, 682);
		do fillBitMap(7, 0, 21840, 21845, 341);
		do fillBitMap(8, 0, -22016, -21846, 42);
		do fillBitMap(9, 0, 16384, 21845, 0);

		return this;
	}

	method void fillBitMap(int row, int a, int b, int c, int d) {
		var int index;
		let index = row * 4;
		let bitMap[index] = a;
		let bitMap[index + 1] = b;
		let bitMap[index + 2] = c;
		let bitMap[index + 3] = d;

		return;
	}

	method Array getBitMap() {
		return bitMap;
	}
}